# costs
fc <- 50000; vc <- 200
# sample size for each group
nt <- 61; ns <- 53
# prior information
deltaE <- 12.7; se.E <- 6.37
deltaC <- -1717; se.C <- 3787
sigma <- 21503
N <- 10000
# willingness to pay equals to 400
lambda <- 400
# prior estimate of INB
b0 <- lambda*deltaE - deltaC
v0 <- (lambda^2)*(se.E)^2 + (se.C)^2
# willingness to pay equals to 200
lambda2 <- 200
# prior estimate of INB
b02 <- lambda2*deltaE - deltaC
v02 <- (lambda2^2)*(se.E)^2 + (se.C)^2

# value of perfect information pg 21
EVPI <- function(b0, v0){
  sigma <- sqrt(v0)
  return(-b0*pnorm(-b0/sigma) + sigma*exp(-b0*b0/(2*v0))/sqrt(2*pi) - b0*as.numeric(b0 <= 0))
}

# pg 35
EVSI <- function(b0,v0,bhat,sigma,n,N){
  # posterior mean of b given data
  b1 <- (b0/v0 + 0.5*n*bhat/(sigma^2))/(1/v0 + 0.5*n/(sigma^2))
  # posterior variance of b given data
  v1 <- (1/v0 + 0.5*n/(sigma^2))^(-1)
  return(list(EVSI=(N - 2*n)*EVPI(b0, v0) - (N - 2*n)*EVPI(b1, v1),
              # EVPI using prior estimates
              EVPI0=(N - 2*n)*EVPI(b0, v0),
              # EVPI using posterior estimates
              EVPI1=(N - 2*n)*EVPI(b0=b1, v0=v1)))
}

# expected value of EVSI
E.EVSI <- function(b0,v0,sigma,n,N){
  sigmabhat <- sqrt(v0 + 2*sigma*sigma/n)
  I1 <- sqrt(2*v0/pi)*sigma*sigma*exp(-(b0*b0)/(2*v0))/(n*sigmabhat^2)
  I2 <- -b0*pnorm(-b0/sqrt(v0)) + (v0^1.5)*exp(-b0*b0/(2*v0))/(sigmabhat*sigmabhat*sqrt(2*pi))
  I3 <- b0*pnorm(-b0*sigmabhat/v0) - v0*exp(-(b0*b0*sigmabhat*sigmabhat)/(2*v0*v0))/(sigmabhat*sqrt(2*pi))
  
  print(paste("EVPI before = ",(N - 2*n)*EVPI(b0,v0)))
  print(paste("Expected EVPI after = ",(N - 2*n)*(I1 + I2 + I3)))
  
  return((N - 2*n)*EVPI(b0,v0) - (N - 2*n)*(I1 + I2 + I3))
}
# calcualting the intergrand in the integral to calculate E(EVSI) pg38
EVSI.int <- function(bhat,b0,v0,sigma,n,N){
  pred.dens <- (1/sqrt(v0 + 2*sigma*sigma/n))*dnorm((bhat - b0)/sqrt(v0 + 2*sigma*sigma/n))
  integrand <- pred.dens*EVSI(b0=b0,v0=v0,bhat=bhat,sigma=sigma,n=n,N=N)$EVPI1
  return(integrand)
}
# running the codes using example from class
integrate(EVSI.int,-Inf,Inf,b0=69,v0=3725,sigma=sqrt(217226.5),n=100,N=1000000)
(1000000-2*100)*EVPI(69,3725)
E.EVSI(b0=69,v0=3725,sigma=sqrt(217226.5),n=100,N=1000000)
# getting the intergrand
EVSI.intfn <- function(bhat,b0,v0,sigma,n,N=N) return(sapply(bhat,EVSI.int,b0=b0,v0=v0,sigma=sigma,n=n,N=N))
# integrating the intergrand to calclate E(EVSI)
EVSInum <- function(n,b0,v0,sigma,N){
  int <- integrate(EVPSI1.intfn,-Inf,Inf,b0=b0,v0=v0,sigma=sigma,n=n,N=N)$value
  return((N - 2*n)*(EVPI(b0,v0) - int))
}
# expected net gain pg42
ENG <- function(n,b0,v0,sigma,N,Cf,Cv){
  return(E.EVSI(n=n,b0=b0,v0=v0,sigma=sigma,N=N) - (Cf + 2*n*Cv + n*abs(b0)))
}
# WTP = 400
# plotting the expected net gain
n <- 1:1000
eng <- array(dim=1000)
for(i in 1:1000) eng[i] <- ENG(n[i],b0,v0,sigma,N,fc,vc)
plot(n, eng,type="l",xlab="Sample Size", ylab="Expected Net Gain ($)", ylim=c(min(eng), max(eng)))
segments(0, 0, 1000, 0, lty=1, lwd=2)
segments(0, min(eng), 0, 0, lty=1, lwd=2)

evsin <- array(dim=1000)
cost <- evsin
for(i in 1:1000){ 
  evsin[i] <- E.EVSI(n=n[i],b0=b0,v0=v0,sigma=sigma,N=10000)
  cost[i] <- (fc + 2*n[i]*vc + n[i]*b0)
}
plot(n,evsin,type="l",xlab="Sample Size",ylab="$", ylim=c(min(c(cost,evsin)),max(c(cost,evsin))))
lines(n,cost,col=3)
legend(600,4000000,legend=c("EVSI","Trial Cost"),col=c(1,3),bty="n",lty=1)
segments(0, 0, 1000, 0, lty=1, lwd=2)
segments(0, 0, 0, max(cost), lty=1, lwd=2)

# WTP = 200
# plotting the expected net gain
n2 <- 1:1000
eng2 <- array(dim=1000)
for(i in 1:1000) eng2[i] <- ENG(n[i],b02,v02,sigma,N,fc,vc)
plot(n2, eng2,type="l",xlab="Sample Size (n)", ylab="Expected Net Gain ($)", ylim=c(min(eng2), max(eng2) + 100000))
points(161, max(eng2), col=3, pch=16)
segments(161, 0, 161, max(eng2), lty=2, col="red")
segments(0, 0, 1000, 0, lty=1, lwd=2)
segments(0, min(eng2), 0, max(eng2) + 100000, lty=1, lwd=2)
text(161, max(eng2) + 70000, labels="Optimal Sample Size", cex= 0.75, col="red")
text(161, -60000, labels="n = 161", cex= 0.75, col="red")
evsin2 <- array(dim=1000)
cost2 <- evsin2
for(i in 1:1000){ 
  evsin2[i] <- E.EVSI(n=n[i],b0=b02,v0=v02,sigma=sigma,N=10000)
  cost2[i] <- (fc + 2*n[i]*vc + n[i]*b0)
}
# potting the evsi
plot(n,evsin2,type="l",xlab="Sample Size",ylab="$",ylim=c(min(c(cost2,evsin2)),max(c(cost2,evsin2))))
lines(n,cost,col=3)
legend(600,4000000,legend=c("EVSI","Trial Cost"),col=c(1,3),bty="n",lty=1)
segments(0, 0, 1000, 0, lty=1, lwd=2)
segments(0, 0, 0, max(cost2), lty=1, lwd=2)
